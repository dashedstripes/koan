$debug: true;

/*

  STYLO - an atomic sass file

  Index:

  1. @variables
  2. @mixins
  3. @normalize
  4. @reset
  5. @grid
  6. @text
  7. @spacing
  8. @flex

*/

/* @variables ========================================================================== */

// Grid
$grid-max-width: 960px;
$grid-gutter: 1.5rem;
$grid-columns: 12;

// Breakpoints
$breakpoint-sm: 500px;
$breakpoint-md: 700px;
$breakpoint-lg: 1000px;

// Color
$black: #1b1b1b;
$white: #ffffff;

/* @mixins ========================================================================== */

@mixin breakpoint-sm {
  @media screen and (min-width: $breakpoint-sm) {
    @content;
  }
}

@mixin breakpoint-md {
  @media screen and (min-width: $breakpoint-md) {
    @content;
  }
}

@mixin breakpoint-lg {
  @media screen and (min-width: $breakpoint-lg) {
    @content;
  }
}

/* @normalize ========================================================================== */

 html {
  line-height: 1.15;
  -webkit-text-size-adjust: 100%;
}

body {
  margin: 0;
}

h1 {
  font-size: 2em;
  margin: 0.67em 0;
}

hr {
  box-sizing: content-box;
  height: 0;
  overflow: visible;
}

pre {
  font-family: monospace, monospace;
  font-size: 1em;
}

a {
  background-color: transparent;
}

abbr[title] {
  border-bottom: none;
  text-decoration: underline;
  text-decoration: underline dotted;
}

b,
strong {
  font-weight: bolder;
}

code,
kbd,
samp {
  font-family: monospace, monospace;
  font-size: 1em;
}

small {
  font-size: 80%;
}

sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline;
}

sub {
  bottom: -0.25em;
}

sup {
  top: -0.5em;
}

img {
  border-style: none;
}

button,
input,
optgroup,
select,
textarea {
  font-family: inherit;
  font-size: 100%;
  line-height: 1.15;
  margin: 0;
}

button,
input {
  overflow: visible;
}

button,
select {
  text-transform: none;
}

button,
[type="button"],
[type="reset"],
[type="submit"] {
  -webkit-appearance: button;
}

button::-moz-focus-inner,
[type="button"]::-moz-focus-inner,
[type="reset"]::-moz-focus-inner,
[type="submit"]::-moz-focus-inner {
  border-style: none;
  padding: 0;
}

button:-moz-focusring,
[type="button"]:-moz-focusring,
[type="reset"]:-moz-focusring,
[type="submit"]:-moz-focusring {
  outline: 1px dotted ButtonText;
}

fieldset {
  padding: 0.35em 0.75em 0.625em;
}

legend {
  box-sizing: border-box;
  color: inherit;
  display: table;
  max-width: 100%;
  padding: 0;
  white-space: normal;
}

progress {
  vertical-align: baseline;
}

textarea {
  overflow: auto;
}

[type="checkbox"],
[type="radio"] {
  box-sizing: border-box;
  padding: 0;
}

[type="number"]::-webkit-inner-spin-button,
[type="number"]::-webkit-outer-spin-button {
  height: auto;
}

[type="search"] {
  -webkit-appearance: textfield;
  outline-offset: -2px;
}

[type="search"]::-webkit-search-decoration {
  -webkit-appearance: none;
}

::-webkit-file-upload-button {
  -webkit-appearance: button;
  font: inherit;
}

details {
  display: block;
}

summary {
  display: list-item;
}

template {
  display: none;
}

[hidden] {
  display: none;
}

/* @reset ========================================================================== */

* {
  box-sizing: border-box;

  @if $debug {
    outline: 1px solid red;
  }
}

body {
  font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;
}

h1, h2, h3, h4, h5, h6 {
  margin: 0;
}

p {
  margin: 0;
}

img {
  max-width: 100%;
}

button {
  border: 0;
  background: transparent;
  cursor: pointer;
}

/* @grid ========================================================================== */

.container {
  max-width: $grid-max-width;
  margin: 0 auto;
  padding: 0rem $grid-gutter;
}

.row {
  display: flex;
  flex-wrap: wrap;
  margin-left: -$grid-gutter / 2;
  margin-right: -$grid-gutter / 2;
}

// Columns

.col {
  flex-grow: 1;
  padding: 0rem $grid-gutter / 2;
}

@for $i from 1 through $grid-columns {
  .col-#{$i} {
    width: 100% / $grid-columns * $i;
    padding: 0rem $grid-gutter / 2;
  }
}

@for $i from 1 through $grid-columns {
  @include breakpoint-sm {
    .col-sm-#{$i} {
      width: 100% / $grid-columns * $i;
      padding: 0rem $grid-gutter / 2;
    }
  }
}

@for $i from 1 through $grid-columns {
  @include breakpoint-md {
    .col-md-#{$i} {
      width: 100% / $grid-columns * $i;
      padding: 0rem $grid-gutter / 2;
    }
  }
}

@for $i from 1 through $grid-columns {
  @include breakpoint-lg {
    .col-lg-#{$i} {
      width: 100% / $grid-columns * $i;
      padding: 0rem $grid-gutter / 2;
    }
  }
}

// Push and Pull

@for $i from 1 through $grid-columns {
  .push-#{$i} {
    position: relative;
    left: 100% / $grid-columns * $i;
  }
}

@for $i from 1 through $grid-columns {
  @include breakpoint-sm {
    .push-sm-#{$i} {
      position: relative;
      left: 100% / $grid-columns * $i;
    }
  }
}

@for $i from 1 through $grid-columns {
  @include breakpoint-md {
    .push-md-#{$i} {
      position: relative;
      left: 100% / $grid-columns * $i;
    }
  }
}

@for $i from 1 through $grid-columns {
  @include breakpoint-lg {
    .push-lg-#{$i} {
      position: relative;
      left: 100% / $grid-columns * $i;
    }
  }
}

@for $i from 1 through $grid-columns {
  .pull-#{$i} {
    position: relative;
    right: 100% / $grid-columns * $i;
  }
}

@for $i from 1 through $grid-columns {
  @include breakpoint-sm {
    .pull-sm-#{$i} {
      position: relative;
      right: 100% / $grid-columns * $i;
    }
  }
}

@for $i from 1 through $grid-columns {
  @include breakpoint-md {
    .pull-md-#{$i} {
      position: relative;
      right: 100% / $grid-columns * $i;
    }
  }
}

@for $i from 1 through $grid-columns {
  @include breakpoint-lg {
    .pull-lg-#{$i} {
      position: relative;
      right: 100% / $grid-columns * $i;
    }
  }
}

/* @text ========================================================================== */

.fw-normal {
  font-weight: normal;
}

.fw-bold {
  font-weight: bold;
}

.fs-italic {
  font-style: italic;
}

.ta-c {
  text-align: center;
}

@include breakpoint-sm {
  .ta-sm-c {
    text-align: center;
  }
}

@include breakpoint-md {
  .ta-md-c {
    text-align: center;
  }
}

@include breakpoint-lg {
  .ta-md-c {
    text-align: center;
  }
}

.ta-l {
  text-align: left;
}

@include breakpoint-sm {
  .ta-sm-l {
    text-align: left;
  }
}

@include breakpoint-md {
  .ta-md-l {
    text-align: left;
  }
}

@include breakpoint-lg {
  .ta-md-l {
    text-align: left;
  }
}

.ta-r {
  text-align: right;
}

@include breakpoint-sm {
  .ta-sm-r {
    text-align: right;
  }
}

@include breakpoint-md {
  .ta-md-r {
    text-align: right;
  }
}

@include breakpoint-lg {
  .ta-md-r {
    text-align: right;
  }
}

/* @spacing ========================================================================== */

$spacing: (
  '0': 0rem,
  '1': 0.5rem,
  '2': 1rem,
  '3': 1.5rem,
  '4': 2rem,
  '5': 2.5rem,
  '6': 3rem,
  '7': 7rem
);

// Margin

@each $name, $value in $spacing {
  .m-#{$name} {
    margin: $value;
  }
}

@each $name, $value in $spacing {
  .m-t-#{$name} {
    margin-top: $value;
  }
}

@each $name, $value in $spacing {
  .m-b-#{$name} {
    margin-bottom: $value;
  }
}

@each $name, $value in $spacing {
  .m-l-#{$name} {
    margin-left: $value;
  }
}

@each $name, $value in $spacing {
  .m-r-#{$name} {
    margin-right: $value;
  }
}

@each $name, $value in $spacing {
  .m-x-#{$name} {
    margin-left: $value;
    margin-right: $value;
  }
}

@each $name, $value in $spacing {
  .m-y-#{$name} {
    margin-top: $value;
    margin-bottom: $value;
  }
}

// Padding

@each $name, $value in $spacing {
  .p-#{$name} {
    padding: $value;
  }
}

@each $name, $value in $spacing {
  .p-t-#{$name} {
    padding-top: $value;
  }
}

@each $name, $value in $spacing {
  .p-b-#{$name} {
    padding-bottom: $value;
  }
}

@each $name, $value in $spacing {
  .p-l-#{$name} {
    padding-left: $value;
  }
}

@each $name, $value in $spacing {
  .p-r-#{$name} {
    padding-right: $value;
  }
}

@each $name, $value in $spacing {
  .p-x-#{$name} {
    padding-left: $value;
    padding-right: $value;
  }
}

@each $name, $value in $spacing {
  .p-y-#{$name} {
    padding-top: $value;
    padding-bottom: $value;
  }
}

/* @flex ========================================================================== */

.flex {
  display: flex;
}

.ai-c {
  align-items: center;
}

.ai-fs {
  align-items: flex-start;
}

.ai-fe {
  align-items: flex-end;
}

.jc-sb {
  justify-content: space-between;
}

.jc-c {
  justify-content: center;
}

.jc-fs {
  justify-content: flex-start;
}

.jc-fe {
  justify-content: flex-end;
}